name: Branch Naming Validation

on:
  push:
    branches:
      - '*'

jobs:
  branch-naming-validation:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check if Jira Issue is In Progress
        id: check-jira-status
        run: |
          # Use the Jira REST API to fetch the status of the Jira issue
          # Replace with your Jira domain, issue key, and authentication
          # Example API request:
          curl -u ${{ secrets.JIRA_USERNAME }}:${{ secrets.JIRA_API_TOKEN }} -X GET "https://preethi-agnest.atlassian.net/jira/servicedesk/projects/DEV/queues/custom/1"

      - name: Validate Branch Names
        #if: steps.check-jira-status.outputs.isInProgress == 'true'
        run: |
          git config --global user.name "PreethiAgnes"
          git config --global user.email "preethiagnest@gmail.com"
          # Define a regex pattern for branch names that include Jira issue keys
          regex_pattern="^[A-Z]+-\d+-[a-z0-9-]+$"

          # Iterate through branch names in the push
          for branch in $(git log --format=%D -n 1 ${{ github.event.before }}..${{ github.event.after }} | grep -Eo 'refs/heads/[^,]+'); do
            branch_name=$(basename $branch)
            # Extract the issue key from the branch name
            issue_key=$(echo $branch_name | awk -F'-' '{print $1}')

            # Check if the issue key exists in the fetched Jira issue and if it's in progress
            if [[ ! "$(jq --arg key "$issue_key" '.key == $key and .fields.status.name == "In Progress"' <<< "${{ steps.check-jira-status.outputs.result }}")" == "true" ]]; then
              echo "Branch name '$branch_name' does not correspond to an issue in progress on the Jira board."
              exit 1
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
