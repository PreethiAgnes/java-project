name: On Push hook

 

on:

  push:

    branches:

      - '*'

      - '*/*'

      - '**'

      - '!prd'

      - '!qa'

jobs:
  validate_branch_name:
    runs-on: ubuntu-latest
          
    steps:

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Use Jira API
      env:
        JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
      run: |
       JIRA_URL="https://your-jira-instance.atlassian.net/rest/api/3/search"
       JIRA_PROJECT_KEY="DEV"
       JIRA_API_TOKEN="${{ secrets.JIRA_API_TOKEN }}"
       JIRA_DOMAIN="https://your-jira-domain.atlassian.net"
       curl -X GET "$JIRA_DOMAIN/rest/api/3/project/$PROJECT_KEY" -H "Authorization: Basic $JIRA_API_TOKEN"

    - name: Get Issues from Jira Board
      run: |
         # Make a REST API request to Jira to retrieve a list of issues
         issues=$(curl -s -X GET "$JIRA_DOMAIN/rest/api/3/board/YOUR_BOARD_ID/issue" -H "Authorization: Basic $JIRA_API_TOKEN")
         echo "$issues" > jira_issues.json
     
    - name: Parse Jira Issue Details
      run: |
           # Parse JSON response and extract issue key and status
           issue_keys=($(jq -r '.issues[].key' jira_issues.json))
           issue_statuses=($(jq -r '.issues[].fields.status.name' jira_issues.json))
      continue-on-error: true

    - name: Check Issue Status
      run: |
        all_in_progress=true
        for status in "${issue_statuses[@]}"; do
          if [ "$status" != "In Progress" ]; then
            all_in_progress=false
            break
          fi
        done
        if [ "$all_in_progress" = true ]; then
          echo "All Jira issues are In Progress"
        else
          echo "Not all Jira issues are In Progress"
        fi
      continue-on-error: true

    - name: Compare with Branch Name
      run: |
        branch_name="${GITHUB_REF#refs/heads/}"
        for key in "${issue_keys[@]}"; do
          if [[ "$branch_name" != *"$key"* ]]; then
            echo "Branch name does not match Jira issue key: $key"
            exit 1
          fi
        done
      continue-on-error: true
       
  
    - name: Check JIRA Issue Status
      run: |
              # Make a REST API request to Jira to retrieve issue details
              issue_details=$(curl -s -X GET "$JIRA_DOMAIN/rest/api/3/issue/$JIRA_ISSUE_KEY" -H "Authorization: Basic $JIRA_API_TOKEN")
    
              # Extract the status from the issue details
              issue_status=$(echo "$issue_details" | jq -r '.fields.status.name')
    
              # Check if the issue is in progress
              if [ "$issue_status" = "In Progress" ]; then
                echo "Jira issue is In Progress"
              else
                echo "Jira issue is not In Progress"
              fi
      env:
              JIRA_DOMAIN: https://your-jira-domain.atlassian.net
              JIRA_ISSUE_KEY: DEV
              JIRA_API_TOKEN: "${{ secrets.JIRA_API_TOKEN }}"

    - name: Check Branch Name
      id: branch_name
      run: |
                branch_name=$(echo "${{ github.head_ref }}" | sed 's/refs\/heads\///')
                if [[ ! "$branch_name" =~ ^DEV-[0-9]+$ ]]; then
                  echo "error::Branch name does not follow the expected pattern (e.g., DEV-123)."
                  echo "error::Please rename your branch and open a new pull request."
                  exit 1
                fi